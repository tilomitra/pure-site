{{setTitle     "Responsive Grids"}}
{{setSubTitle  "A fully-customizable responsive grid"}}
{{setActiveNav "grids"}}

{{> header}}

<div class="content">

    <h2 class="content-subhead">How do Kimono Grids work?</h2>
    <p>
        Kimono Grids are very easy to work with. Consider <code>k-g</code> to be a row or "grid", and {{code "k-u-*-*"}} to be columns, or "units". Each {{code "k-g"}} can contain many units. Units have various class names that represent their widths. For example, {{code "k-u-1-2"}} has a width of 50%, whereas {{code "k-u-1-5"}} would have a width of 20%.
    </p>

    <p>
        The only constraints for Kimono Grids are that all "units" are children of a "grid". In other words, if you have an element with a {{code "k-u-*"}} class name, it needs to be within a parent element with a {{code "k-g"}} or {{code "k-g-r"}} class name. Here's an example of a grid with three columns:
    </p>

  {{#code}}
    {{> grids/intro}}
  {{/code}}

    <aside>
        <p>
            For a more detailed guide, check out the <a href="http://yuilibrary.com/yui/docs/cssgrids/">CSS Grids documentation</a> on YUILibrary.
        </p>
    </aside>


    <h2 class="content-subhead">How do responsive grids work?</h2>
    <p>
        Kimono Responsive Grids builds on top of the existing grids implementation. It adds a single new class name called {{code "k-g-r"}} (the "r" stands for responsive, you see). You can use this instead of using {{code "k-g"}} as you normally do. All elements with a class name of {{code "k-u-*-*"}} will automatically become responsive if they are direct descendents of a {{code "k-g-r"}}.
    </p>


    <h2 class="content-subhead">The HTML</h2>
    <p>
        The first gist shows how regular Kimono Grids are written. These grids are unresponsive. They'll always be one-thirds irrespective of the width of the screen. The second gist replaces the {{code "k-g"}} with {{code "k-g-r"}}, thereby making the one-third columns collapse to full width on lower screen widths.
    </p>


    <h2 class="content-subhead">Features</h2>

    <ul class="content-spaced">
        <li>Adds configurable media queries for different screen widths (Desktops, Landscape Tablets, Portrait Tablets, Phones)</li>
        <li>Collapses elements to 100% if smaller than a certain width (767px by default)</li>
        <li>Adjusts images to fit on smaller screens</li>
        <li>Works with as many columns as you want (or as few)</li>
        <li>Configure prefixes (as we've done on this page)</li>
    </ul>


    <h2 class="l-centered">See it in action below!</h2>
    <h3 class="l-centered">Resize the page to see the grid collapse.</h3>

    {{> grids/four-col}}


    <h2 class="content-subhead">Grids on Mobile</h2>
    <p>
        Putting the {{code "k-g"}} classname on the wrapper instead of {{code "k-g-r"}} will ensure that grid units will not collapse on small screens. This is a good way to make grids on smaller screens like phones.
    </p>

    {{> grids/mobile-col}}


      <h2 class="content-subhead">Want to just use Grids?</h2>
      <p>
          Grids is part of the Kimono CSS file. However, if you just want Grids and not the other modules, you can pull it down separately. Just include this {{code "<link>"}} element in your {{code "<head>"}}.
      </p>

    {{#code}}
      <link rel="stylesheet" href="http://yui.yahooapis.com/kimono/{{kimono.version}}/grids-min.css">
    {{/code}}

      <aside>
          <p>
              Optionally, you can head over to the <a href="http://yui.github.com/gridbuilder/">GridBuilder</a> to make your very own custom grid. Save the outputted CSS in a file and you're good to go!
          </p>
      </aside>
</div>
